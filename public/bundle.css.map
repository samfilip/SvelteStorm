{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "CreateMenu.svelte",
    "DirTopMenu.svelte",
    "FileDir.svelte",
    "FileTest.svelte",
    "Editor.svelte",
    "StateManager.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import FileDir from './Directory/FileDir.svelte'\n    import XTerm from './XTerm.svelte';\n    import Editor from './MonacoComponents/Editor.svelte';\n    import StateManager from './StateManager/StateManager.svelte'\n    export let orientation = 'columns';\n    export let localhost;\n\n    let value = \"\"\n\t  let submit = false\n  \n\t\n\tconst handleSubmit = () => {\n\t\tsubmit = false\n    return false\n\t}\n\t\n\tconst handleKeyup = () => {\n\t\tsubmit = false\n\t\t\n\t\tif (event.code == 'Enter') {\n\t\t\tevent.preventDefault()\n\t\t\tevent.target.value\n\t\t\tvalue = event.target.value\n      localhost = `http://127.0.0.1:${value}/`\n\t\t\treturn false\n\t\t}\n\t}\n\n  </script>\n  \n  <style>\n  \n  body {\n    height: 100%;\n    width: 100%;\n  }\n\n  .wrapper {\n      height: 100%;\n      display: grid;\n      /* border: 1px solid rgb(228, 81, 13); */\n      grid-template-columns: min-content;\n      grid-template-rows: 1fr;\n      background-color: rgb(39, 38, 38);\n      color: #444;\n  }\n  \n  .box {\n    background-color: rgb(39, 38, 38);\n    /* border: 1px solid rgb(228, 81, 13); */\n    color: rgb(226, 142, 45);\n    border-radius: 0px;\n    padding: 10px;\n    font-size: 150%;\n  }\n\n  .a {\n    overflow: auto;\n    resize: horizontal;\n    min-width: 20%;\n    max-width: 150%;\n    min-height: 10%;\n    max-height: 150%;\n    grid-column: 1 ;\n    grid-row: 1;\n    padding: 0;\n    background-color: #242425;\n    border-right: 1px solid #3d3d3d;\n    border-bottom: 1px solid #3d3d3d;\n  }\n  \n  .b {\n    overflow: scroll;\n    min-width: 10%;\n    max-width: 150%;\n    min-height: 10%;\n    max-height: 150%;\n    grid-column: 2;\n    grid-row: 1;\n    background-color: #1d1d1d;\n    border-bottom:1px solid #3d3d3d;\n    border-right:1px solid #3d3d3d;\n  }\n\n  .c {\n    overflow: auto;\n    min-width: 10%;\n    max-width: 150%;\n    min-height: 10%;\n    max-height: 150%;\n    grid-column: 1 ;\n    grid-row: 2 ;\n    background-color: #242425;\n    border-right: 1px solid #3d3d3d;\n    padding: 0;\n  }\n  \n  .d {\n    overflow: auto;\n    resize: vertical;\n    min-width: 10%;\n    min-height: 10%;\n    max-height: 150%;\n    padding: 0px;\n    text-align: center;\n    grid-column: 3;\n    grid-row: 1;\n    background-color: #1d1d1d;\n    border-bottom: 1px solid #3d3d3d;\n  }\n\n  .d input {\n    margin: auto;\n    margin-top: 0;\n    margin-bottom: 0;\n    height: 20px;\n    font-size: 15px;\n  }\n  \n  .e {\n    overflow: auto;\n    min-width: 10%;\n    max-width: 150%;\n    min-height: 100%;\n    grid-column: 2 / 4;\n    grid-row: 2;\n    background-color: #1d1d1d;\n  }\n  \n  .webpage {\n    height: 90%;\n    width: 95%;\n  }\n\n  .b :global(.childClass) {\n    overflow: scroll;\n    display: flex;\n    height: 100%;\n    width: 100%;\n  }\n\n  iframe:focus {\n    outline: none;\n  }\n\n</style>\n  <body class:orientation>\n  <main class=\"wrapper\" >\n    \n      <div class=\"box a target\">\n          <FileDir />\n      </div>\n      <div class=\"box b\">\n          <!-- svelte-ignore missing-declaration -->\n          <Editor class=\"childClass\" />\n      </div>\n      <div class=\"box c root\">\n        <StateManager />\n      </div>\n      <div class=\"box d root\"> \n        <form on:submit|preventDefault={handleSubmit}>\n          <input placeholder=\"Local Host Port\" type=\"text\" on:keyup|preventDefault={handleKeyup}>\n        </form>\n        {#if submit === true} \n          <iframe  class=\"webpage\" title=\"local host\" src={localhost}></iframe>\n        {/if}\n          <iframe  class=\"webpage\" title=\"local host\" src={localhost}></iframe>\n        </div>\n      <div class=\"box e\"> \n          <XTerm />\n      </div>\n\n  </main>\n  </body>\n\n\n\n",
    "<script>\n  export let filePath;\n  import { DirectoryData } from '../Utilities/DirectoryStore';\n  const fs = require('fs');\n  let fileStat = fs.statSync(filePath)\n  \n  \n\n  const unsub = DirectoryData.subscribe(data =>{\n  });\n\n  const renameHandler = () => {\n    DirectoryData.update( currentData => {\n      return {...currentData, rename :true};\n    })\n  }\n\n  const deleteHandler = () => {   \n    let stats = fs.statSync(filePath); \n    if(stats.isFile()){\n      fs.unlinkSync(filePath);\n    }\n\n    if(stats.isDirectory()) {\n      fs.rmdir(filePath, { recursive: true }, (err) => {\n        if (err) {\n          throw err;\n        }\n      });\n    }\n    \n    DirectoryData.update( currentData => {\n      return {...currentData, deleteFile:true};        \n    })\n  }\n\n  const createFileHandler = () => {\n    DirectoryData.update( currentData => {\n      return {...currentData, createFile :true, activeFile:''};\n    })\n  }\n\n  const createFolderHandler = () => {\n    DirectoryData.update( currentData => {\n      return {...currentData, createFolder :true, activeFile:''};\n    })\n  }\n\n</script>\n\n<!-- Svelte -->\n<div class=createMenuWrapper>\n  {#if fileStat.isFile()}\n    <p class='items' on:click={renameHandler}>Rename</p>\n    <p class='items'on:click={deleteHandler}>Delete</p>\n  {/if}\n  {#if fileStat.isDirectory()}\n    <p  class='items' on:click={createFileHandler}>New File</p>\n    <p  class='items' on:click={createFolderHandler}>New Folder</p>\n    <p  class='items' on:click={renameHandler}>Rename</p>\n    <p  class='items' on:click={deleteHandler}>Delete</p>    \n  {/if}\n\n</div>\n\n\n\n\n<!-- Style -->\n<style>\n.createMenuWrapper{\n  background-color: rgb(126, 107, 89);\n  color: rgb(238, 227, 221);\n  font-size: 15px;\n  width:100px;\n  height: auto;\n  padding: 10px 10px 10px 10px;\n}\n\n.items:hover {\n  color: rgb(250, 198, 164);\n  cursor: pointer;\n}\n</style>\n",
    "<script>\n  import { DirectoryData } from '../Utilities/DirectoryStore';\n  const fs = require('fs');\n  let mainDir = '';\n  let createMainFile= false;\n  let createMainFolder = false;\n  let reload = false;\n  let newName = '';\n  let fileState = {}\n  let fileName;\n  const unsub = DirectoryData.subscribe(data =>{\n      mainDir = data.mainDir;\n      reload = data.reload; \n      createMainFile = data.createMainFile;\n      createMainFolder = data.createMainFolder;\n      fileState = data.fileState;\n  });\n  const refreshDir = () => {\n    console.log('clickig now');\n    DirectoryData.update( currentData => {\n      return {\n        ...currentData, \n        reload: true\n      };\n    })\n  }\n  const addFolder = () => {\n    console.log('clicking addFolder');\n    DirectoryData.update( currentData => {\n      return {\n        ...currentData, \n        createMainFolder: true,\n        activeFile: ''\n      };\n    })\n  }\n  const addFile = () => {\n    console.log('clicking addFile');\n    DirectoryData.update( currentData => {\n      return {\n        ...currentData, \n        createMainFile: true,\n        activeFile: ''\n      };\n    })\n  }\n  const createFileHandler = (e,path) => {\n    DirectoryData.update( currentData => {\n      return {\n      ...currentData, \n      activeDir: path,\n      activeFile: '',   \n      };\n     })\n    if(e.key !== 'Enter') return;\n       \n    newName = e.target.value;      \n    \n    fs.writeFileSync(path+'/'+newName, '', (err) => {\n      if(err) throw err;        \n    });\n    DirectoryData.update( currentData => {\n      return {\n      ...currentData,         \n      createMainFile: false,\n      rename:false, \n      activeFile: '',\n      };\n    })      \n    \n    newName = '';\n  }\n  const createFolderHandler = (e,path) => {\n    DirectoryData.update( currentData => {\n      return {\n      ...currentData, \n      activeDir: path,\n      activeFile: '',   \n      };\n     })\n    if(e.key !== 'Enter') return;\n    \n    try {\n      if (!fs.existsSync(path+'/'+newName)) {\n        fs.mkdirSync(path+'/'+newName)\n    }\n    } catch (err) {\n      console.error(err)\n    }\n    DirectoryData.update( currentData => {\n      return {\n      ...currentData,         \n      createMainFolder: false,\n      rename:false, \n      activeFile: '',\n      };\n    })   \n    \n    newName = '';\n    \n  }\n  const resetStatus = () => {\n    DirectoryData.update( currentData => {\n        return {\n        ...currentData,         \n        createMainFolder: false,\n        createMainFile:false,\n        };\n      })   \n  }\n</script>\n  <div class='fileMenu'>\n    <div class='fileArea' on:click={createMainFile || createMainFolder ? resetStatus : undefined}>{process.platform === \"win32\" ?  mainDir.substring(mainDir.lastIndexOf('\\\\')+1) : mainDir.substring(mainDir.lastIndexOf('/')+1)}</div>\n    <div class='refresh' on:click={refreshDir}></div>\n    <div class='addFile' on:click = {addFile}></div>\n    <div class='addFolder'on:click = {addFolder}></div> \n  </div>\n  {#if createMainFile}\n    <span>      \n      <input \n        class='textBox'\n        bind:this={fileName}\n        on:keydown={(e) => createFileHandler(e,mainDir)} \n        bind:value={newName}\n        placeholder='New File Name'\n        type=\"text\"/>      \n    </span>\n  {/if}\n\n  {#if createMainFolder}\n    <span>\n      <input \n        class='textBox'\n        bind:this={fileName}\n        on:keydown={(e) => createFolderHandler(e,mainDir)} \n        bind:value={newName}\n        placeholder='New File Name'\n        type=\"text\"/>\n    </span>\n  {/if}\n\n\n<style>\n  .fileMenu {\n    background-color: rgb(27, 27, 26);\n    /* border-radius: 10px; */\n    /* padding-left: 2px; */\n    padding-right: 10px;\n    padding-top : 2px;\n    padding-bottom: 2px;\n    width: 100%;\n  }\n  .fileArea {    \n    float: left;    \n    height: 20px;\n    font-size: 14px;\n    color: white;\n  }\n  .refresh {\n    float: right;\n    background-image: url('../src/icons/refresh.png');\n    height: 20px;    \n    width: 20px;\n    background-repeat: no-repeat;\n    background-size: 20px;\n  }\n  .addFile {\n    float: right;\n    background-image: url('../src/icons/addFile.png');\n    height: 20px;\n    width: 20px;\n    background-repeat: no-repeat;\n    background-size: 20px;\n    margin-right: 5px;\n  }\n  .addFolder {\n    float: right;\n    background-image: url('../src/icons/add_folder2.png');\n    height: 20px;\n    width: 20px;\n    background-repeat: no-repeat;\n    background-size: 20px;\n    margin-right: 5px;\n  }\n  .textBox {\n    margin-left: 10px;\n    padding: 10px 10px 10px 10px;\n    font-size: 14px;\n    width: 150px;    \n  }\n</style>",
    "<script>  \n    import FileTest from './FileTest.svelte';  \n    import DirTopMenu from './DirTopMenu.svelte'  \n    import { onMount, onDestroy, afterUpdate} from 'svelte';\n    import { DirectoryData } from '../Utilities/DirectoryStore';\n\n    const fs = require('fs');\n    let savedTree = [];\n    var remote = window.require('electron').remote;\n    var electronFs = remote.require('fs');\n    const {ipcRenderer} = require('electron');\n\n    \n    let directory;\n    let rename;\n    let stateObj = {};\n    let resultArr = [];\n    let fsTimeout;\n    export let activeDir = '';\n    let mainDir = '';\n    export let reload = false; \n  \n  const unsub = DirectoryData.subscribe(data =>{\n    rename = data.rename;      \n    activeDir = data.activeDir;\n    mainDir = data.mainDir;\n    reload = data.reload;\n    \n    \n  });\n  // store \n  onMount (()=>{\n  \n  });\n  afterUpdate(() => {\n    if(reload){\n      console.log('reloading now')\n      readFileNames(directory);\n      DirectoryData.update(currentData =>{\n        return {\n            ...currentData,\n            reload: false\n        }\n      })\n    }\n    if(activeDir) {              \n      fs.watch(activeDir, (eventType, filename) => {\n        console.log('directory',directory)\n        if(eventType === 'rename' && !fsTimeout){  \n          readFileNames(mainDir);              \n        }\n        if(!fsTimeout){\n          fsTimeout = setTimeout(function() { fsTimeout=null }, 3000);\n        }        \n      });\n    }    \n  });\n\n  onDestroy(()=>{\n      unsub();\n  });\n  ipcRenderer.on('folder-opened', function (evt, file, content) {\n    directory = Array.isArray(content) ? content[0] : content;      \n    console.log('directory',directory)\n    if(directory) {       \n      fs.readdir(directory, (error,readfiles) => {     \n        let files = readfiles.filter(file => file !== '.git');        \n        if (files.length ){\n          var fileTree = new FileTree(directory);        \n          fileTree.build();                \n          savedTree = fileTree.items;\n          savedTree.sort((a,b) => {\n            return (fs.statSync(a.path).isDirectory() === fs.statSync(b.path).isDirectory() ? 0 : fs.statSync(a.path).isDirectory() ? -1 : 1)\n          })\n\n          \n          DirectoryData.update(currentData =>{\n            return {\n                ...currentData,\n                fileTree: savedTree,\n                currentDir: directory,\n                mainDir: directory              \n            }\n          })\n        }\n        else {\n          DirectoryData.update(currentData =>{\n            return {\n                ...currentData,                  \n                activeDir: directory,\n                mainDir: directory\n            }\n          })\n        }\n      })\n      \n    }      \n  });\n  \n  \n  //method to read all the files inside the directory\n  const readFileNames = (mainDir) => {\n    if(mainDir) {       \n      var fileTree = new FileTree(mainDir);        \n      fileTree.build();                \n      savedTree = fileTree.items;\n      savedTree.sort((a,b) => {\n        return (fs.statSync(a.path).isDirectory() === fs.statSync(b.path).isDirectory() ? 0 : fs.statSync(a.path).isDirectory() ? -1 : 1)\n      })\n      \n      DirectoryData.update(currentData =>{\n        return {\n            ...currentData,\n            fileTree: savedTree,              \n        }\n      })\n    }\n       \n    \n    \n  }\n  \n  class FileTree {\n    constructor(path, name = null){        \n      this.path = path;\n      this.name = name;\n      this.items = [];\n      this.state = {\n          path : path,\n          name: name,\n          items: [],\n          color : 'white',\n          isOpen : false\n      }   \n    }\n  //method to build file tree\n    build () {\n               \n        this.items = FileTree.readDir(this.path,'',0);\n      \n    }\n    static readDir(path) {\n      var fileArray = [];        \n      \n      electronFs.readdirSync(path).forEach(file => {\n               \n        var fileInfo = new FileTree(`${path}/${file}`, file);\n        var stat = electronFs.statSync(fileInfo.path);\n        if (file.split('.').pop() === 'svelte'){\n          \n          if(path.includes('node_modules') !== true) {\n            var content = fs.readFileSync(`${path}/${file}`).toString();                    \n            var stateArr = [];\n            var value = content.split(/\\r?\\n/);\n            if(value !==[\"\"]) {\n              value.forEach( el => {\n                if(el && el.includes('export')) {                       \n                  el = el.replace(/\\s/g, '');\n                  if(el.includes('exportlet')) {\n                    el = el.replace('exportlet','');\n                    stateArr.push(el.replace(';',''));\n                  }\n                  if(el.includes('exportconst')) {\n                    el = el.replace('exportconst','');\n                    stateArr.push(el.replace(';',''));\n                  }\n                               \n                  stateObj[file] = stateArr;                                 \n                }\n                DirectoryData.update(currentData =>{\n                  return {\n                    ...currentData,\n                      stateObj: stateObj\n                  };\n                })                        \n                      \n              })\n            }                \n          }                \n        }\n        if (stat.isDirectory()){          \n          fileInfo.items = FileTree.readDir(fileInfo.path);\n        }\n\n        if (fileInfo.name !== '.git') {\n          fileArray.push(fileInfo);\n        }\n      })\n    return fileArray;\n    }\n  }\n</script>\n\n<!-- HTML -->\n\n<div class=directoryContainer>\n  <DirTopMenu></DirTopMenu>\n  {#if directory}     \n  <FileTest directory={mainDir} fileTree={savedTree} />\n  {/if}\n</div>\n<!-- CSS -->\n<style>\n.directoryContainer{\n    max-height: 50vh;\n    overflow-y: scroll;\n    display: flex;\n    flex-direction: column;\n    align-content: flex-start;\n}\n.directoryContainer::-webkit-scrollbar {\nwidth: 12px;\n}\n.directoryContainer::-webkit-scrollbar-thumb:hover {\n    background-color: #e28e2d;\n    transition: background-color 2s ease-in-out;\n}\n\n</style>",
    "<script>\n\n  export let fileTree;\n  import { DirectoryData } from '../Utilities/DirectoryStore';\n  import CreateMenu from './CreateMenu.svelte';\n  const fs = require('fs');\n  const fileState = {};\n  let rename = false;\n  let deleteFile = false;\n  let rightClickStatus = false;\n  let activeFile = '';\n  let newName = '';\n  let createFile= false;\n  let createFolder = false;\n  let activeDir = '';\n  let activeFolder = '';\n  let fileName;\n  \n    \n  const unsub = DirectoryData.subscribe(data =>{\n    activeFile = data.activeFile;\n    rename = data.rename;\n    createFile = data.createFile;\n    createFolder = data.createFolder; \n    activeDir = data.activeDir;     \n    activeFolder = data.activeFolder;    \n  });\n\n  const toggleVisibility = (path) => {\n    if(!fileState[path]) fileState[path]= true;\n    else fileState[path] = false;\n  }\n\n\n  const dblClickHandler = (path) => {\n    const openFilePath = path; \n    console.log(openFilePath)     \n    DirectoryData.update(currentData =>{\n      return {\n        ...currentData,\n        openFilePath,\n        fileRead:true};\n    })\n  }\n\n  const rightClickHandler = (path) => {    \n    const openFilePath = path;\n    const fullPath = path.substring(0, path.lastIndexOf('/'));      \n    DirectoryData.update(currentData =>{\n      return {\n        ...currentData, \n        activeFile: openFilePath, \n        rename: false,\n        activeDir:fullPath,\n        activeFolder: path\n      };\n    })  \n\n  }\n\n  const renameHandler = (e,path) => {\n    if (e.key !== 'Enter') return;    \n    \n    const fullPath = path.substring(0, path.lastIndexOf('/'));\n    fs.renameSync(path, fullPath+'/'+newName);\n    DirectoryData.update( currentData => {\n      return {\n      ...currentData, \n      rename:false, \n      activeFile: '',\n      activeDir: fullPath\n      };\n    })\n    \n    newName = '';  \n    \n  }\n\n  const createFileHandler = (e,path) => {\n    DirectoryData.update( currentData => {\n      return {\n      ...currentData, \n      activeDir: path,\n      activeFile: '',   \n      };\n     })\n    \n    if (e.key !== 'Enter') return;          \n    \n    fs.writeFileSync(path+'/'+newName, '', (err) => {\n      if(err) throw err;        \n    })\n    DirectoryData.update( currentData => {\n      return {\n      ...currentData,         \n      createFile: false,\n      rename:false, \n      activeFile: '',\n      };\n    })\n\n    fileState[path]= true;\n    newName = '';\n      \n    \n  }\n\n  const createFolderHandler = (e,path) => {\n    DirectoryData.update( currentData => {\n      return {\n      ...currentData, \n      activeDir: path,\n      activeFile: '',   \n      };\n     })\n\n    if (e.key !== 'Enter') return;  \n         \n    \n    try {\n      if (!fs.existsSync(path+'/'+newName)) {\n        fs.mkdirSync(path+'/'+newName)\n      }\n    } catch (err) {\n      console.error(err)\n    }\n    DirectoryData.update( currentData => {\n      return {\n      ...currentData,         \n      createFolder: false,\n      rename:false, \n      activeFile: '',\n      };\n    })\n    fileState[path]= true;\n    newName = '';\n    \n  }\n\n  const resetRename = () => {\n    DirectoryData.update( currentData => {\n      return {\n        ...currentData, \n        rename: false, \n        activeFile: '',\n        createFile: false,\n        createFolder:false\n      };\n    })\n  }\n\n</script>\n\n\n<!-- Components -->\n<div class=directory >\n  {#if fileTree}\n    {#each fileTree as {path,name, items}}\n    <ul>\n      {#if fs.statSync(path).isDirectory()}        \n        {#if rename && activeFile === path}\n          <span>\n            <input \n            class='textBox'\n            bind:this={fileName}\n            on:keydown={(e) => renameHandler(e,path)} \n            bind:value={newName}\n            placeholder={name}\n            type=\"text\"/>\n          </span>\n        {:else}\n          <li on:click={toggleVisibility(path)} class={!fileState[path] ? \"liFolderClosed\" : \"liFolderOpen\"} on:contextmenu|preventDefault=\"{rightClickHandler(path)}\" \n          on:click={activeFile || createFile || createFolder ? resetRename : undefined}>{name}</li>\n          {#if activeFolder === path && createFile}\n          <span>\n            <input \n            class='textBox'\n            bind:this={fileName}\n            on:keydown={(e) => createFileHandler(e,path)} \n            bind:value={newName}\n            placeholder='New File Name'\n            type=\"text\"/>\n          </span>\n        {/if}\n        {#if activeFolder === path && createFolder}\n          <span>\n            <input \n            class='textBox'\n            bind:this={fileName}\n            on:keydown={(e) => createFolderHandler(e,path)} \n            bind:value={newName}\n            placeholder='New Folder Name'\n            type=\"text\"/>\n          </span>\n        {/if}\n          {#if activeFile === path}\n          <CreateMenu filePath={path} />\n          {/if}\n        {/if}             \n      {:else}        \n        {#if rename && activeFile === path}\n          <span>\n            <input \n            class=\"textBox\"   \n            bind:this={fileName}         \n            on:keydown={(e) => renameHandler(e,path)} \n            bind:value={newName}\n            placeholder={name}\n            type=\"text\"/>\n          </span>\n        {:else}\n          <li  on:contextmenu|preventDefault=\"{rightClickHandler(path)}\" on:dblclick={dblClickHandler(path)} class=\"liFiles\" on:click={activeFile ? resetRename : undefined}>\n            \n            <img src={fs.existsSync(`src/icons/file_type_${name.split('.').pop()}.svg`) ? `../src/icons/file_type_${name.split('.').pop()}.svg` : '../src/icons/file_type_exclam.png'}  \n            alt={''} />\n            \n            {name} </li>\n          {#if activeFile === path}\n              <CreateMenu filePath={path} />\n          {/if}\n        {/if}\n      {/if}\n\n      {#if fileState[path] && fs.statSync(path).isDirectory()}      \n        <svelte:self fileTree={items.sort((a,b) => {\n          return (fs.statSync(a.path).isDirectory() === fs.statSync(b.path).isDirectory() ? 0 : fs.statSync(a.path).isDirectory() ? -1 : 1)\n        })}/>\n      {/if}\n    </ul>\n    {/each}\n  {/if}\n</div>\n\n<!-- CSS Styling -->\n<style>    \n  .liFolderClosed {\n    font-size: 15px;\n    cursor: pointer;\n    padding: 0px 0 5px 25px;\n    list-style: none;\n    background-image: url(\"../src/icons/folder-1484.svg\");\n    background-repeat: no-repeat;\n    background-position: left;\n    background-size: 15px;   \n  }\n\n  .liFolderOpen {\n    font-size: 15px;\n    cursor: pointer;\n    display: flex;\n    justify-content: flex-start;\n    padding: 10px 0 5px 25px;\n    list-style: none;\n    background-image: url('../src/icons/folder-1485.svg');\n    background-repeat: no-repeat;\n    background-position: left;\n    background-size: 15px;    \n  }\n\n  .liFiles {\n    font-size: 15px;\n    cursor: pointer;\n    /* padding-left: 25px; */\n    /* margin-left: 20px; */\n    margin-top: 1px;\n    list-style: none;\n    /* background-image: url('./img/document.png'); */\n    background-repeat: no-repeat;\n    background-position: left;\n    /* background-size: 15px; */\n  }\n  \n  .directory{\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;    \n  }\n\n  ul{\n    padding-left: 10px;\n    margin: 5px;\n  }\n\n  input{\n    background-color: white;\n  }\n\n  .textBox {\n    margin-left: 10px;\n    padding: 10px 10px 10px 10px;\n    font-size: 14px;\n    width: 150px;\n    \n  }\n\nimg {\n  width: 15px;\n  margin-top: 10px;\n}\n</style>\n",
    "<script>\n  import Monaco from './Monaco.svelte';\n  import { DirectoryData, openTabs } from '../Utilities/DirectoryStore';\n\n  const { remote, ipcRenderer } = require('electron');\n  const fs = require('fs');\n  const path = require('path');\n  const currentWindow = remote.getCurrentWindow();\n  \n  export let activeTabValue = 0;\n  let activeEditor = 0;\n\n  let value = [''];\n  let language = 'html';\n  let [filePath, fileName, readData] = ['', '', ''];\n  let title = 'Svelte Storm';\n  let count = 0;\n\n  function addTab(newFile) {\n  \n    let duplicate = false;\n    $openTabs.map((tab) => {\n      if (tab.filePath === newFile.filePath) {\n        duplicate = true;\n      }\n    })\n\n    if (!duplicate) {\n      $openTabs = [ ...$openTabs, newFile]\n      count = count + 1;\n    }\n  };\n  // remove and reset tab order\n  function deleteTab(targetId) {\n\n    $openTabs = $openTabs.filter((t) => t.tabId != targetId).map((t, i) => ({\n      editorValue: t.editorValue,\n      ext: t.ext,\n      editorLang: t.editorLang,\n      filePath: t.filePath,\n      fileName: t.fileName,\n      tabId: i,\n    }))\n\n    count = count - 1;\n    activeTabValue = 0;\n    activeEditor = activeTabValue;\n  }\n\n  const handleClick = (tabId) => () => {\n    activeTabValue = tabId;\n    activeEditor = activeTabValue;\n  }\n  // convert file extension to monaco language\n  const getLanguage = (lang) => {\n      switch (lang) {\n        case 'js':\n          return 'javascript';\n        case 'jsx':\n          return 'javascript';\n        case 'ts':\n          return 'typescript';\n        case 'json':\n          return 'json';\n        case 'css':\n          return 'css';\n        case 'html':\n          return 'html';\n        case 'md':\n          return 'markdown';\n        case 'svelte':\n          return 'html';\n        default:\n          return undefined;\n      }\n  }\n  // render file on open and add to store\n  ipcRenderer.on('file-opened', function (evt, file, content) {\n      const newTab = {}\n      filePath = (file);\n      process.platform === \"win32\" ? fileName = file.slice().split('\\\\').pop() : fileName = file.slice().split('/').pop();\n      language = file.slice().split('.').pop();\n      newTab.editorValue = content.split(/\\r?\\n/);\n      newTab.ext = language;\n      newTab.editorLang = getLanguage(language);\n      newTab.filePath = filePath;\n      newTab.fileName = fileName;\n      newTab.tabId = count;\n      addTab(newTab);\n      if (file) { title = `${path.basename(file)} - ${title}`; }\n  });\n\n  const unsub = DirectoryData.subscribe(data => {\n    console.log(data.openFilePath)\n    const newTab = {};\n      if (data.fileRead) {\n        readData = fs.readFileSync(data.openFilePath).toString();\n        value = readData.split(/\\r?\\n/);\n        fileName = data.openFilePath.slice().split('/').pop();\n        language = path.basename(data.openFilePath).split('.').pop();\n        if (data.openFilePath) { title = `${path.basename(data.openFilePath)} - Svelte Storm`; }\n        newTab.editorValue = value;\n        newTab.ext = language;\n        newTab.editorLang = getLanguage(language);\n        newTab.filePath = data.openFilePath;\n        newTab.fileName = fileName;\n        newTab.tabId = count;\n        currentWindow.setTitle(title);\n        addTab(newTab);\n      }\n  });\n\n</script>\n\n  <ul>\n    {#each $openTabs as tab}\n    <li class={activeTabValue === tab.tabId ? 'active' : ''}>\n      <span class=\"tab-span\"\n        on:click={handleClick(tab.tabId)}\n      >\n        <img src=\"../src/icons/file_type_{tab.ext}.svg\" \n          alt={''}\n        />\n        {tab.fileName}\n        <span\n          class=\"delete-button\" \n          value={tab.tabId}\n          on:click={(value) => deleteTab(tab.tabId)}\n        >\n          &times\n        </span>\n      </span>\n    </li>\n    {/each}\n  </ul>\n  \n  {#if $openTabs.length > 0}\n    <div class=\"editor-body\">\n        <Monaco\n          class=\"childClass current\"\n          bind:value={$openTabs[(activeEditor)].editorValue}\n          bind:language={$openTabs[(activeEditor)].editorLang}\n          bind:filePath={$openTabs[(activeEditor)].filePath}\n        />\n    </div>\n  {/if}\n\n<style>\n\n  .editor-body {\n    width: 100%;\n    height: 100vh;\n    overflow: scroll;\n  }\n\n  ul {\n    display: flex;\n    flex-direction: row;\n    overflow: scroll;\n    padding-left: 0;\n    margin-top: 0;\n    margin-bottom: 0;\n    list-style: none;\n    border-bottom: 1px solid #dee2e6;\n    background-color: rgb(27, 27, 26);\n    /* border-radius: 5px; */\n  }\n\n\tli {\n\t\tmargin-bottom: -1px;\n    background-color: rgb(37, 37, 37);\n    color: #fff;\n\t}\n\n  .tab-span {\n    border: 1px solid transparent;\n    border-top-left-radius: 0.25rem;\n    border-top-right-radius: 0.25rem;\n    display: flex;\n    flex-direction: row;\n    padding: 0 1rem;\n    cursor: pointer;\n    font-size: 16px;\n  }\n\n  .tab-span:hover {\n    border-color: #e9ecef #e9ecef #dee2e6;\n  }\n\n  li.active > span {\n    color: #ffffff;\n    background-color: rgb(53, 50, 50);\n    border-color: #dee2e6 #dee2e6 #fff;\n  }\n\n  img {\n    height: 1em;\n    background-color: inherit;\n    margin-top: 3px;\n    /* margin-bottom: 0; */\n  }\n  .delete-button {\n    margin-left: 5px;\n    border-right: black;\n    border-left: black;\n  }\n\n</style>\n",
    "<script> \n  import { DirectoryData } from '../Utilities/DirectoryStore';\n  export let stateObj = {};\n      \n  const unsub = DirectoryData.subscribe(data =>{\n    stateObj = data.stateObj;      \n  })    \n</script>    \n\n    \n<!-- Components -->\n\n<div class=\"state-container\">\n  <div class=\"h5Container\">\n    <h5 class=\"title\">States</h5> \n  </div>   \n    <ul>\n        {#each Object.entries(stateObj) as [file,state]}\n            <li class='fileName'>{file} : <span class='stateName'>{'{ '}{state.join()}{' }'}</span> </li>                 \n        {/each}\n    </ul>    \n</div>\n\n\n<!-- CSS Styling -->\n<style>\n.state-container {\n  /* background-color: rgb(2, 29, 2); */\n  margin-bottom: 10px;\n  padding-bottom: 10px;\n  padding-left: 0;\n  /* max-height: 500px; */\n  margin-top: 0;\n  padding-top: 0;\n  display: flex;\n  flex-direction: column;  \n}\n.h5Container {\nbackground-color: rgb(27, 27, 26);\nheight: 20px;\nwidth: 100%;\npadding-left: 7px;\n\n\n}\n\n.title {  \n  color: rgb(230, 100, 41);\n  margin-bottom: 0;\n  margin-top: 0;\n  padding-top: 0;\n  font-size: 16px;\n  \n}\n\nspan {\n  font-size: 14px;\n}\n\n.fileName {\n  /* background-color: peachpuff; */\n  border-radius: 10px;\n  font-size: 16px;\n  /* max-width: 150px; */\n  /* padding: 0px 0 5px 25px; */\n  background-image: url('../src/icons/arrow_head.svg');\n  background-repeat: no-repeat;\n  background-position: left;\n  background-size: 15px;  \n}\n\n.stateName {\n  font-size: 14px;\n  color: rgb(194, 83, 39);\n}\n\nul {\n  list-style: none;\n  margin-top: 0;\n  margin: 0;\n  padding: 0;\n  \n  \n}\n\nli {\n  margin-top: 5px; \n  margin-left: 0;\n  \n}\n\n\n\n</style>"
  ],
  "names": [],
  "mappings": "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"
}